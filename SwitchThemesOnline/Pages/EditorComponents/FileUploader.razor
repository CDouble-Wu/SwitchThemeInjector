@using System.IO;
@inject Blazor.FileReader.IFileReaderService fileReaderService;
@inject IJSRuntime js;

@code {
	[Parameter] public string Text { get; set; }
	[Parameter] public string Filter { get; set; }
	[Parameter] public Action<MemoryStream> OnUpload { get; set; }
	[Parameter] public int FileCount { get; set; } = 1;

	ElementReference inputTypeFileElement;

	public async Task ReadFile()
	{
		int c = 0;
		foreach (var file in await fileReaderService.CreateReference(inputTypeFileElement).EnumerateFilesAsync())
		{
			var info = await file.ReadFileInfoAsync();

			if (Filter != null)
				if (info.Type != Filter)
				{
					js.Alert("This file format is not supported");
					continue;
				}

			OnUpload(await file.CreateMemoryStreamAsync());
			if (++c >= FileCount) break;
		}
	}
}

<input type="file" @ref="@inputTypeFileElement" @ref:suppressField @onchange="@ReadFile" accept="@Filter" hidden />
<button class="btn--raised buttonCenter" @onclick="@(() => js.Click(inputTypeFileElement))">@Text</button>